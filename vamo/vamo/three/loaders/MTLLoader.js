import{Color,DefaultLoadingManager,FileLoader,FrontSide,Loader,LoaderUtils,MeshPhongMaterial,RepeatWrapping,TextureLoader,Vector2,sRGBEncoding}from"../three.module.js";class MTLLoader extends Loader{constructor(e){super(e)}load(t,a,e,r){const s=this,i=""===this.path?LoaderUtils.extractUrlBase(t):this.path;var o=new FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(e){try{a(s.parse(e,i))}catch(e){r?r(e):console.error(e),s.manager.itemError(t)}},e,r)}setMaterialOptions(e){return this.materialOptions=e,this}parse(e,t){var r=e.split("\n");let s={};var i=/\s+/,o={};for(let e=0;e<r.length;e++){let a=r[e];if(0!==(a=a.trim()).length&&"#"!==a.charAt(0)){var n=a.indexOf(" ");let e=0<=n?a.substring(0,n):a,t=(e=e.toLowerCase(),0<=n?a.substring(n+1):"");t=t.trim(),"newmtl"===e?(s={name:t},o[t]=s):"ka"===e||"kd"===e||"ks"===e||"ke"===e?(n=t.split(i,3),s[e]=[parseFloat(n[0]),parseFloat(n[1]),parseFloat(n[2])]):s[e]=t}}e=new MaterialCreator(this.resourcePath||t,this.materialOptions);return e.setCrossOrigin(this.crossOrigin),e.setManager(this.manager),e.setMaterials(o),e}}class MaterialCreator{constructor(e="",t={}){this.baseUrl=e,this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=void 0!==this.options.side?this.options.side:FrontSide,this.wrap=void 0!==this.options.wrap?this.options.wrap:RepeatWrapping}setCrossOrigin(e){return this.crossOrigin=e,this}setManager(e){this.manager=e}setMaterials(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(e){if(!this.options)return e;var t={};for(const i in e){var a=e[i],r={};t[i]=r;for(const o in a){let e=!0,t=a[o];var s=o.toLowerCase();switch(s){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(t=[t[0]/255,t[1]/255,t[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===t[0]&&0===t[1]&&0===t[2]&&(e=!1)}e&&(r[s]=t)}}return t}preload(){for(const e in this.materialsInfo)this.create(e)}getIndex(e){return this.nameLookup[e]}getAsArray(){let e=0;for(const t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray}create(e){return void 0===this.materials[e]&&this.createMaterial_(e),this.materials[e]}createMaterial_(e){const s=this;var t=this.materialsInfo[e];const i={name:e,side:this.side};function a(e,t){var a,r;i[e]||(t=s.getTextureParams(t,i),(a=s.loadTexture((a=s.baseUrl,"string"!=typeof(r=t.url)||""===r?"":/^https?:\/\//i.test(r)?r:a+r))).repeat.copy(t.scale),a.offset.copy(t.offset),a.wrapS=s.wrap,a.wrapT=s.wrap,"map"!==e&&"emissiveMap"!==e||(a.encoding=sRGBEncoding),i[e]=a)}for(const o in t){var r=t[o];let e;if(""!==r)switch(o.toLowerCase()){case"kd":i.color=(new Color).fromArray(r).convertSRGBToLinear();break;case"ks":i.specular=(new Color).fromArray(r).convertSRGBToLinear();break;case"ke":i.emissive=(new Color).fromArray(r).convertSRGBToLinear();break;case"map_kd":a("map",r);break;case"map_ks":a("specularMap",r);break;case"map_ke":a("emissiveMap",r);break;case"norm":a("normalMap",r);break;case"map_bump":case"bump":a("bumpMap",r);break;case"map_d":a("alphaMap",r),i.transparent=!0;break;case"ns":i.shininess=parseFloat(r);break;case"d":(e=parseFloat(r))<1&&(i.opacity=e,i.transparent=!0);break;case"tr":e=parseFloat(r),0<(e=this.options&&this.options.invertTrProperty?1-e:e)&&(i.opacity=1-e,i.transparent=!0)}}return this.materials[e]=new MeshPhongMaterial(i),this.materials[e]}getTextureParams(e,t){var a={scale:new Vector2(1,1),offset:new Vector2(0,0)},e=e.split(/\s+/),r=e.indexOf("-bm");return 0<=r&&(t.bumpScale=parseFloat(e[r+1]),e.splice(r,2)),0<=(r=e.indexOf("-s"))&&(a.scale.set(parseFloat(e[r+1]),parseFloat(e[r+2])),e.splice(r,4)),0<=(r=e.indexOf("-o"))&&(a.offset.set(parseFloat(e[r+1]),parseFloat(e[r+2])),e.splice(r,4)),a.url=e.join(" ").trim(),a}loadTexture(e,t,a,r,s){var i=void 0!==this.manager?this.manager:DefaultLoadingManager;let o=i.getHandler(e);(o=null===o?new TextureLoader(i):o).setCrossOrigin&&o.setCrossOrigin(this.crossOrigin);i=o.load(e,a,r,s);return void 0!==t&&(i.mapping=t),i}}export{MTLLoader};